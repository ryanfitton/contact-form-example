<?php
    /******************************
       Debugging
    ******************************/
    /*
        ini_set('display_errors', 1);
        ini_set('display_startup_errors', 1);
        error_reporting(E_ALL);
    */



    /******************************
        Import libaries
    ******************************/
    //Import PHPMailer classes into the global namespace
    //Note: These must be at the top of your script, not inside a function
    use PHPMailer\PHPMailer\PHPMailer;
    use PHPMailer\PHPMailer\Exception;

    //Require autoload, generated by Composer
    require 'libs/autoload.php';
    
    //Require the config settings
    require 'config.php';



    /******************************
        Functions
    ******************************/
        //**** Cross Site Scripting prevention
            //Prevents malicious code from being posted
            function stopxss($var) {
                //$var = strip_tags(trim(stripslashes(utf8_decode($var))));
                $var = strip_tags(trim(utf8_decode($var)));
                $var = str_replace("(", " ", $var);
                $var = str_replace(")", " ", $var);
                $var = str_replace("*", " ", $var);
                $var = str_replace("%", " ", $var);
                $var = str_replace("+", " ", $var);
                $var = str_replace("'", "", $var);

                return $var;
            }
            
            
            
        //**** Email address format checker
            //Appears as though, most of the code was from here: http://get-simple.info/forums/showthread.php?tid=434
            function check_email_address($email) {
                //Check that there's one @ symbol
                if (!preg_match("/[^@]{1,64}@[^@]{1,255}$/", $email)) {
                    // Email invalid because wrong number of characters in one section, or wrong number of @ symbols.
                    return false;
                }

                /* Split the email address it into sections to make processing easier
                 *
                 * Example:
                 * Email: firstname.lastname@example.co.uk
                 *
                 * $email_array:
                 * [0] => 'firstname.lastname'
                 * [1] => 'example.co.uk'
                 *
                 * $local_array:
                 * [0] => 'firstname'
                 * [1] => 'lastname'
                 */
                $email_array = explode("@", $email); //Email array: [0]: Email Name - [1]: Domain
                $local_array = explode(".", $email_array[0]); //Local array: [0]: Email Name Before period (.) - [1]: Email Name After period (.)

                //Check the size of each part within $local_array is correct
                for ($i = 0; $i < sizeof($local_array); $i++) {
                    if (!preg_match("/(([A-Za-z0-9!#$%&'*+\/\=?^_`{|}~-][A-Za-z0-9!#$%&'*+\/\=?^_`{|}~\.-]{0,63})|(\"[^(\\|\")]{0,62}\"))$/", $local_array[$i])) {
                    return false;
                    }
                }

                //Check if domain resolved to an IP address. If not, the domain is not valid.
                if (!preg_match("/\[?[0-9\.]+\]?$/", $email_array[1])) {
                        $domain_array = explode(".", $email_array[1]);

                    if (sizeof($domain_array) < 2) {
                        return false; //Not enough parts to domain
                    }

                    for ($i = 0; $i < sizeof($domain_array); $i++) {
                        if (!preg_match("/(([A-Za-z0-9][A-Za-z0-9-]{0,61}[A-Za-z0-9])|([A-Za-z0-9]+))$/", $domain_array[$i])) {
                        return false;
                        }
                    }
                }
                return true;
            }
            
            
            
    /******************************
        Contact form Submission
    ******************************/
    if (isset($_POST['submit'])) {
        //**** Posted Variables
            //Loop through and Filter/Santise $_POST values
            foreach ($_POST as $key => $value) {
                $_POST[$key] = stopxss($value); //Run the 'stopxss' function and re-save the value
            }

        

        //**** Validation checks
            //Set $message as a global variable
            global $message;
            
            //Name
            if (empty($_POST['name'])) {
                $message['name'] = 'Please enter your name';
            } elseif (!preg_match('/^[a-zA-Z ]+$/' , ($_POST['name']))) {
                $message['name'] = 'Invalid character in name';
            } elseif (strlen($_POST['name']) < 3) {
                $message['name'] = 'Name must be at least three characters long';
            }

            //Number
            if (empty($_POST['number'])) {
                $message['number'] = 'Please enter your contact number'; 
            } elseif (!is_numeric(str_replace(' ', '', $_POST['number']))) {
                $message['number'] = 'Contact number must be numeric';
            }
        
            //Email
            /*if (empty($_POST['email'])) {
                $message['email'] = 'Please enter your email address'; 
            }*/
            if (!empty($_POST['email']) and (check_email_address($_POST['email']) == false) ) {
                $message['email'] = 'Please enter a valid email address';
            }

            //Company
            if (empty($_POST['company'])) {
                $message['company'] = 'Please enter your company name'; 
            }
        
            //Enquiry
            if (empty($_POST['subject'])) {
                $message['enquiry'] = 'Please select your enquiry type'; 
            }
        
            //Enquiry
            if (empty($_POST['enquiry'])) {
                $message['enquiry'] = 'Please enter your enquiry'; 
            }
        
        

        //**** Send Message
            //If there are no errors, continue sending and saving
            if (!$message) {

                //Set the default timezone to use. Available since PHP 5.1
                date_default_timezone_set(TIMEZONE);


                //New PHPMailer object
                $mail = new PHPMailer(true);
                try {
                
                    //Set header data
                    $mail->setFrom(EMAIL_FROM);                             //From address
                    $mail->addAddress(EMAIL_TO);                            //Send to this address
                    $mail->addReplyTo($_POST['email'], $_POST['name']);     //Reply-To address - The user's details
                    $mail->Subject = EMAIL_SUBJECT;                         //Subject
                    
                    
                    //Get the IP Address
                    $ipaddress = stopxss($_SERVER['REMOTE_ADDR']);


                    //Setup message body
                    $mail->Body = '
                        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
                        <html xmlns="http://www.w3.org/1999/xhtml">
                        <head>
                            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
                            <title>Contact Form Example</title>

                            <style type="text/css">
                                body {font-family:Arial, Helvetica, sans-serif;}
                                a,a:hover {color:#0088cc;text-decoration:underline;}
                            </style>
                        </head>

                        <body>

                            <div style="margin: 0; padding: 0; font-size:14px; font-family: Arial, Helvetica, sans-serif; font-weight:normal;">

                                <p><strong>Name:</strong> ' . $_POST['name'] .'</p>
                                <p><strong>Email:</strong> ' . $_POST['email'] .'</p>
                                <p><strong>Contact Number:</strong> ' . $_POST['number'] .'</p>
                                <p><strong>Company:</strong> ' . $_POST['company'] .'</p>
                                <p><strong>Enquiry type:</strong> ' . $_POST['subject'] .'</p>
                                <p><strong>Enquiry:</strong> ' . $_POST['enquiry'] .'</p>
                                <p><strong>IP address:</strong> ' . $ipaddress .'</p>

                            </div>

                        </body>

                        </html>';


                    $mail->IsHTML(true);                                    //Set if email format is HTML or Plain Text

                    
                    //Set mail importance (optional)
                    //$mail->Priority = 1;                                  //For most clients expecting the Priority header: 1 = High, 2 = Medium, 3 = Low
                    //$mail->AddCustomHeader("X-MSMail-Priority: High");    //MS Outlook custom header: May set to "Urgent" or "Highest" rather than "High"
                    //$mail->AddCustomHeader("Importance: High");           //Not sure if Priority will also set the Importance header, so set manually

                    
                    //Error sending email
                    if (!$mail->send()) {
                        echo "Message could not be sent. " . $mail->ErrorInfo;
                        
                        
                    //Success sending email
                    } else {
                        //**** Write to the database
                            $conn = new mysqli(DATABASE_HOST, DATABASE_USER, DATABASE_PASSWORD, DATABASE_NAME); //Connect to the database

                            //Check connection to the database
                            if ($conn->connect_error) {
                                echo "Connection to the database failed.";
                                
                                
                            //Connected successfully
                            } else { 
                                
                                //Data to add to the database
                                $sql = "INSERT INTO entries (name, email, number, company, subject, enquiry, ipaddress) VALUES ('" . $_POST['name'] . "', '" . $_POST['email'] . "', '" . $_POST['number'] . "', '" . $_POST['company'] . "', '" . $_POST['subject'] . "', '" . $_POST['enquiry'] . "', '" . $ipaddress . "')";

                                //Run query
                                if ($conn->query($sql) === TRUE) {
                                    //Unset $_POST data
                                    unset($_POST);

                                    $conn->close(); //Close the Database connection before the redirect occurs

                                    //Redirect page to set 'formstatus' as 'success', use only the URL and no other passed $_GET values
                                    header('Location: ' . parse_url($_SERVER["HTTP_REFERER"], PHP_URL_PATH) . '?formstatus=success'); //Set a form status, passes: sent

                                    
                                //Error with query
                                } else {
                                    echo "Could not add data to the database.";
                                }
                                
                            }
                        
                            $conn->close(); //Close the Database connection due to errors
                        
                    }

                    
                //Catch any errors when creating a new PHPMailer object
                } catch (Exception $e) {
                    echo "Message could not be sent. Issue with PHPMailer object. Mailer Error: " . $mail->ErrorInfo;
                }

                
                //Exit script
                exit;
            }
    }
?>